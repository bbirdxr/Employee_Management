<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.employee.mapper.AttendanceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.employee.entity.Attendance">
        <id column="id" property="id" />
        <result column="employee_id" property="employeeId" />
        <result column="department_id" property="departmentId" />
        <result column="attendance_date" property="attendanceDate" />
        <result column="clock_in_time" property="clockInTime" />
        <result column="clock_out_time" property="clockOutTime" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, employee_id, department_id, attendance_date, clock_in_time, clock_out_time, create_time, update_time
    </sql>

    <select id="selectById" resultType="com.example.employee.entity.Attendance">
        select id, employee_id, department_id, attendance_date, clock_in_time, clock_out_time, create_time, update_time
        from attendance
        where id = #{id}
    </select>

    <insert id="insert" parameterType="com.example.employee.entity.Attendance">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into attendance (employee_id, department_id, attendance_date, clock_in_time, clock_out_time)
        values (#{employeeId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, #{attendanceDate,jdbcType=DATE},
        #{clockInTime,jdbcType=TIMESTAMP}, #{clockOutTime,jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from attendance
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <update id="updateById" parameterType="com.example.employee.entity.Attendance">
        update attendance
        <set>
            <if test="attendanceDate != null">
                attendance_date = #{attendanceDate,jdbcType=DATE},
            </if>
            <if test="clockInTime != null">
                clock_in_time = #{clockInTime,jdbcType=TIMESTAMP},
            </if>
            <if test="clockOutTime != null">
                clock_out_time = #{clockOutTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByAttendanceQuery" resultType="com.example.employee.entity.Attendance" parameterType="com.example.employee.model.dto.AttendanceQuery">
        select id, employee_id, department_id, attendance_date, clock_in_time, clock_out_time, create_time, update_time
        from attendance
        where 1=1
        <if test="employeeId != null">
            and employee_id = #{employeeId}
        </if>
        <if test="departmentId != null">
            and department_id = #{departmentId}
        </if>
        <if test="attendanceDate != null">
            and attendance_date = #{attendanceDate}
        </if>
    </select>

</mapper>
